{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar list = require('@lexical/list');\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar react = require('react');\nvar utils = require('@lexical/utils');\nvar lexical = require('lexical');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useList(editor) {\n  react.useEffect(() => {\n    return utils.mergeRegister(editor.registerCommand(list.INSERT_ORDERED_LIST_COMMAND, () => {\n      list.insertList(editor, 'number');\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.INSERT_UNORDERED_LIST_COMMAND, () => {\n      list.insertList(editor, 'bullet');\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.REMOVE_LIST_COMMAND, () => {\n      list.removeList(editor);\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical.INSERT_PARAGRAPH_COMMAND, () => {\n      const hasHandledInsertParagraph = list.$handleListInsertParagraph();\n      if (hasHandledInsertParagraph) {\n        return true;\n      }\n      return false;\n    }, lexical.COMMAND_PRIORITY_LOW));\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction ListPlugin() {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  react.useEffect(() => {\n    if (!editor.hasNodes([list.ListNode, list.ListItemNode])) {\n      throw new Error('ListPlugin: ListNode and/or ListItemNode not registered on editor');\n    }\n  }, [editor]);\n  useList(editor);\n  return null;\n}\nexports.ListPlugin = ListPlugin;","map":{"version":3,"names":["list","require","LexicalComposerContext","react","utils","lexical","useList","editor","useEffect","mergeRegister","registerCommand","INSERT_ORDERED_LIST_COMMAND","insertList","COMMAND_PRIORITY_LOW","INSERT_UNORDERED_LIST_COMMAND","REMOVE_LIST_COMMAND","removeList","INSERT_PARAGRAPH_COMMAND","hasHandledInsertParagraph","$handleListInsertParagraph","ListPlugin","useLexicalComposerContext","hasNodes","ListNode","ListItemNode","Error","exports"],"sources":["C:/Users/franc/Desktop/Progetto/Frontend/app_frontend/node_modules/@lexical/react/LexicalListPlugin.dev.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar list = require('@lexical/list');\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar react = require('react');\nvar utils = require('@lexical/utils');\nvar lexical = require('lexical');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useList(editor) {\n  react.useEffect(() => {\n    return utils.mergeRegister(editor.registerCommand(list.INSERT_ORDERED_LIST_COMMAND, () => {\n      list.insertList(editor, 'number');\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.INSERT_UNORDERED_LIST_COMMAND, () => {\n      list.insertList(editor, 'bullet');\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.REMOVE_LIST_COMMAND, () => {\n      list.removeList(editor);\n      return true;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical.INSERT_PARAGRAPH_COMMAND, () => {\n      const hasHandledInsertParagraph = list.$handleListInsertParagraph();\n\n      if (hasHandledInsertParagraph) {\n        return true;\n      }\n\n      return false;\n    }, lexical.COMMAND_PRIORITY_LOW));\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction ListPlugin() {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  react.useEffect(() => {\n    if (!editor.hasNodes([list.ListNode, list.ListItemNode])) {\n      throw new Error('ListPlugin: ListNode and/or ListItemNode not registered on editor');\n    }\n  }, [editor]);\n  useList(editor);\n  return null;\n}\n\nexports.ListPlugin = ListPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC;AACnC,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AAC7E,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIG,KAAK,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACrC,IAAII,OAAO,GAAGJ,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,OAAOA,CAACC,MAAM,EAAE;EACvBJ,KAAK,CAACK,SAAS,CAAC,MAAM;IACpB,OAAOJ,KAAK,CAACK,aAAa,CAACF,MAAM,CAACG,eAAe,CAACV,IAAI,CAACW,2BAA2B,EAAE,MAAM;MACxFX,IAAI,CAACY,UAAU,CAACL,MAAM,EAAE,QAAQ,CAAC;MACjC,OAAO,IAAI;IACb,CAAC,EAAEF,OAAO,CAACQ,oBAAoB,CAAC,EAAEN,MAAM,CAACG,eAAe,CAACV,IAAI,CAACc,6BAA6B,EAAE,MAAM;MACjGd,IAAI,CAACY,UAAU,CAACL,MAAM,EAAE,QAAQ,CAAC;MACjC,OAAO,IAAI;IACb,CAAC,EAAEF,OAAO,CAACQ,oBAAoB,CAAC,EAAEN,MAAM,CAACG,eAAe,CAACV,IAAI,CAACe,mBAAmB,EAAE,MAAM;MACvFf,IAAI,CAACgB,UAAU,CAACT,MAAM,CAAC;MACvB,OAAO,IAAI;IACb,CAAC,EAAEF,OAAO,CAACQ,oBAAoB,CAAC,EAAEN,MAAM,CAACG,eAAe,CAACL,OAAO,CAACY,wBAAwB,EAAE,MAAM;MAC/F,MAAMC,yBAAyB,GAAGlB,IAAI,CAACmB,0BAA0B,CAAC,CAAC;MAEnE,IAAID,yBAAyB,EAAE;QAC7B,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,EAAEb,OAAO,CAACQ,oBAAoB,CAAC,CAAC;EACnC,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,UAAUA,CAAA,EAAG;EACpB,MAAM,CAACb,MAAM,CAAC,GAAGL,sBAAsB,CAACmB,yBAAyB,CAAC,CAAC;EACnElB,KAAK,CAACK,SAAS,CAAC,MAAM;IACpB,IAAI,CAACD,MAAM,CAACe,QAAQ,CAAC,CAACtB,IAAI,CAACuB,QAAQ,EAAEvB,IAAI,CAACwB,YAAY,CAAC,CAAC,EAAE;MACxD,MAAM,IAAIC,KAAK,CAAC,mEAAmE,CAAC;IACtF;EACF,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EACZD,OAAO,CAACC,MAAM,CAAC;EACf,OAAO,IAAI;AACb;AAEAmB,OAAO,CAACN,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
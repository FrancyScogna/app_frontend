{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Progetto\\\\Frontend\\\\app_frontend\\\\src\\\\components\\\\authComponents\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, Grid, TextField, Typography } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const navigate = useNavigate();\n\n  //Variabili per il settaggio e il controllo dell'email.\n  const [email, setEmail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [emailEmpty, setEmailEmpty] = useState(true);\n\n  //Funzione per controllare il campo \"Email\".\n  const onChangeEmail = event => {\n    const inputEmail = event.target.value;\n    setEmail(inputEmail);\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    var valid;\n    var empty;\n    if (inputEmail === \"\") {\n      valid = false;\n      empty = true;\n    } else {\n      valid = emailRegex.test(inputEmail);\n      empty = false;\n    }\n    if (empty) {\n      setEmailEmpty(true);\n      setEmailValid(false);\n    } else {\n      if (valid) {\n        setEmailEmpty(false);\n        setEmailValid(false);\n      } else {\n        setEmailEmpty(false);\n        setEmailValid(true);\n      }\n    }\n  };\n  const [password, setPassword] = useState(\"\");\n  const [passwordEmpty, setPasswordEmpty] = useState(true);\n  const onChangePassword = event => {\n    const inputPassword = event.target.value;\n    if (inputPassword === \"\") {\n      setPasswordEmpty(true);\n    } else {\n      setPasswordEmpty(false);\n    }\n  };\n\n  //Variabile per il settaggio del checkbox \"Ricordami\".\n  const [remembermeChecked, setRemembermeChecked] = useState(false);\n\n  //Funzione che si esegue quando il checkbox \"Ricordami\" cambia e setta la variabile.\n  const onChangeRememberme = event => {\n    setAlert(false);\n    const checked = event.target.checked;\n    if (checked) {\n      setRemembermeChecked(true);\n    } else {\n      setRemembermeChecked(false);\n    }\n  };\n\n  //Funzione che si esegue quando clicchi sul testo \"Hai dimenticato la password?\".\n  const onClickForgotPassword = () => {\n    navigate(\"/forgotpassword\");\n  };\n\n  //Variabili per il settaggio del caricamento del loading button, del testo del messaggio dell'alert,\n  //dell'attivazione dell'alert, del check del \"ricordami\".\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState([]);\n  const [alert, setAlert] = useState(false);\n\n  //Funzione che si esegue quando clicchi sul pulsante \"Esegui l'accesso\".\n  //AAA: Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\n  const onPressSignIn = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setAlert(false);\n    setMessage([]);\n    const mainAlertMessages = () => {\n      setMessage([]);\n      const messages = [{\n        key: \"emailInvalid\",\n        message: \"Verifica che l'email inserita sia in un formato corretto.\",\n        visible: !emailValid\n      }, {\n        key: \"emailEmpty\",\n        message: \"Verifica che tutti i campi siano compilati.\",\n        visible: passwordEmpty || emailEmpty\n      }];\n      return messages;\n    };\n    const messages = mainAlertMessages();\n    const allConditionsSatisfied = messages.every(message => !message.visible);\n    if (!allConditionsSatisfied) {\n      setAlert(true);\n      setMessage(messages);\n      setLoading(false);\n    } else {\n      /*\r\n      await Auth.signIn(email, password)\r\n      .then((data) => {\r\n          if(remembermeChecked){\r\n              rememberDevice()\r\n          }else{\r\n              window.location.reload(false)\r\n          }\r\n      })\r\n      .catch(error => {\r\n          switch (error.message) {\r\n              case \"Incorrect username or password.\":\r\n                  setAlert(true)\r\n                  setMessage(\"L'username o la password non sono corretti.\")\r\n                  setLoading(false)\r\n                  break;\r\n              case \"Custom auth lambda trigger is not configured for the user pool.\":\r\n                  setAlert(true)\r\n                  setMessage(\"Verifica che tutti i campi siano stati compilati.\")\r\n                  setLoading(false)\r\n                  break;\r\n              case \"Username cannot be empty\":\r\n                  setAlert(true)\r\n                  setMessage(\"Verifica che tutti i campi siano stati compilati.\")\r\n                  setLoading(false)\r\n                  break;\r\n              case \"User does not exist.\":\r\n                  setAlert(true)\r\n                  setMessage(\"L'utente non esiste.\")\r\n                  setLoading(false)\r\n                  break;\r\n              case \"Attempt limit exceeded, please try after some time.\":\r\n                  setAlert(true)\r\n                  setMessage(\"Hai effettuato troppi tentativi, riprova in seguito.\")\r\n                  setLoading(false)\r\n                  break;\r\n              case \"User is not confirmed.\":\r\n                  navigate(\"/sendcodeverify\")\r\n                  setLoading(false)\r\n                  break;\r\n              default:\r\n                  setAlert(false)\r\n                  setMessage('')\r\n                  setLoading(false)\r\n                  break;\r\n          }*/\n    }\n  };\n\n  //Funzione che si esegue quando clicchi il pulsante \"Crea un account\".\n  const onPressSignUp = () => {\n    navigate(\"/signup\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 2,\n        columnSpacing: 1,\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            color: \"primary\",\n            fontWeight: \"bold\",\n            children: \"Accedi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              display: !alert && \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"current-password\",\n            type: \"password\",\n            label: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            rowSpacing: 1,\n            columnSpacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  style: {\n                    transform: \"scale(0.8)\"\n                  },\n                  onChange: onChangeRememberme\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 33\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  marginLeft: \"-5px\",\n                  fontSize: \"15px\",\n                  children: \"Ricordami\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"right\",\n                variant: \"subtitle1\",\n                fontSize: \"15px\",\n                onClick: onClickForgotPassword,\n                tabIndex: 0,\n                style: {\n                  cursor: \"pointer\",\n                  marginTop: \"9px\",\n                  marginRight: \"5px\",\n                  marginBottom: \"10px\"\n                },\n                children: \"Hai dimenticato la password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            rowSpacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                type: \"submit\",\n                variant: \"contained\",\n                fullWidth: true,\n                loading: loading,\n                onClick: onPressSignIn,\n                children: \"Effettua l'accesso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Divider, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  id: \"text_divider\",\n                  variant: \"button\",\n                  fontSize: \"12px\",\n                  children: \"Oppure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                id: \"signup_button\",\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: onPressSignUp,\n                children: \"Crea un account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"POy9RzqKofdl+hmtGOiEWyrMxbk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useNavigate","Alert","Button","Checkbox","Divider","FormControl","FormControlLabel","Grid","TextField","Typography","LoadingButton","jsxDEV","_jsxDEV","LoginForm","_s","navigate","email","setEmail","emailValid","setEmailValid","emailEmpty","setEmailEmpty","onChangeEmail","event","inputEmail","target","value","emailRegex","valid","empty","test","password","setPassword","passwordEmpty","setPasswordEmpty","onChangePassword","inputPassword","remembermeChecked","setRemembermeChecked","onChangeRememberme","setAlert","checked","onClickForgotPassword","loading","setLoading","message","setMessage","alert","onPressSignIn","e","preventDefault","mainAlertMessages","messages","key","visible","allConditionsSatisfied","every","onPressSignUp","className","children","component","container","rowSpacing","columnSpacing","display","item","xs","variant","align","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","severity","style","autoComplete","type","label","fullWidth","onChange","control","transform","marginLeft","fontSize","onClick","tabIndex","cursor","marginTop","marginRight","marginBottom","id","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Progetto/Frontend/app_frontend/src/components/authComponents/LoginForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, Grid, TextField, Typography } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport \"./styles.css\";\r\n\r\nfunction LoginForm(){\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Variabili per il settaggio e il controllo dell'email.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [emailEmpty, setEmailEmpty] = useState(true);\r\n\r\n    //Funzione per controllare il campo \"Email\".\r\n    const onChangeEmail = (event) => {\r\n        const inputEmail = event.target.value;\r\n        setEmail(inputEmail);\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        var valid;\r\n        var empty;\r\n\r\n        if(inputEmail === \"\"){\r\n            valid = false;\r\n            empty = true;\r\n        }else{\r\n            valid = emailRegex.test(inputEmail);\r\n            empty = false;\r\n        }\r\n        \r\n        if(empty){\r\n            setEmailEmpty(true);\r\n            setEmailValid(false);\r\n        }else{\r\n            if(valid){\r\n                setEmailEmpty(false);\r\n                setEmailValid(false);\r\n            }else{\r\n                setEmailEmpty(false);\r\n                setEmailValid(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordEmpty, setPasswordEmpty] = useState(true);\r\n\r\n    const onChangePassword = (event) => {\r\n        const inputPassword = event.target.value;\r\n        if(inputPassword === \"\"){\r\n            setPasswordEmpty(true);\r\n        }else{\r\n            setPasswordEmpty(false);\r\n        }\r\n    }\r\n\r\n    //Variabile per il settaggio del checkbox \"Ricordami\".\r\n    const [remembermeChecked, setRemembermeChecked] = useState(false);\r\n\r\n    //Funzione che si esegue quando il checkbox \"Ricordami\" cambia e setta la variabile.\r\n    const onChangeRememberme = (event) => {\r\n        setAlert(false)\r\n        const checked = event.target.checked;\r\n        if(checked){\r\n            setRemembermeChecked(true)\r\n        }else{\r\n            setRemembermeChecked(false)\r\n        }\r\n    }\r\n\r\n    //Funzione che si esegue quando clicchi sul testo \"Hai dimenticato la password?\".\r\n    const onClickForgotPassword = () => {\r\n        navigate(\"/forgotpassword\")\r\n    }\r\n\r\n    //Variabili per il settaggio del caricamento del loading button, del testo del messaggio dell'alert,\r\n    //dell'attivazione dell'alert, del check del \"ricordami\".\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState([]);\r\n    const [alert, setAlert] = useState(false);\r\n\r\n    //Funzione che si esegue quando clicchi sul pulsante \"Esegui l'accesso\".\r\n    //AAA: Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\r\n    const onPressSignIn = async(e) =>{\r\n        e.preventDefault()\r\n        setLoading(true);\r\n        setAlert(false);\r\n        setMessage([]);\r\n\r\n        const mainAlertMessages = () => {\r\n            setMessage([])\r\n            const messages = [\r\n                { key: \"emailInvalid\", message: \"Verifica che l'email inserita sia in un formato corretto.\", visible: !emailValid},\r\n                { key: \"emailEmpty\", message: \"Verifica che tutti i campi siano compilati.\", visible: passwordEmpty || emailEmpty }            \r\n            ];\r\n            return messages;\r\n        };\r\n\r\n        const messages = mainAlertMessages();\r\n        const allConditionsSatisfied = messages.every((message) => !message.visible);\r\n\r\n        if(!allConditionsSatisfied){\r\n            setAlert(true);\r\n            setMessage(messages);\r\n            setLoading(false);\r\n        }else{\r\n            /*\r\n            await Auth.signIn(email, password)\r\n            .then((data) => {\r\n                if(remembermeChecked){\r\n                    rememberDevice()\r\n                }else{\r\n                    window.location.reload(false)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                switch (error.message) {\r\n                    case \"Incorrect username or password.\":\r\n                        setAlert(true)\r\n                        setMessage(\"L'username o la password non sono corretti.\")\r\n                        setLoading(false)\r\n                        break;\r\n                    case \"Custom auth lambda trigger is not configured for the user pool.\":\r\n                        setAlert(true)\r\n                        setMessage(\"Verifica che tutti i campi siano stati compilati.\")\r\n                        setLoading(false)\r\n                        break;\r\n                    case \"Username cannot be empty\":\r\n                        setAlert(true)\r\n                        setMessage(\"Verifica che tutti i campi siano stati compilati.\")\r\n                        setLoading(false)\r\n                        break;\r\n                    case \"User does not exist.\":\r\n                        setAlert(true)\r\n                        setMessage(\"L'utente non esiste.\")\r\n                        setLoading(false)\r\n                        break;\r\n                    case \"Attempt limit exceeded, please try after some time.\":\r\n                        setAlert(true)\r\n                        setMessage(\"Hai effettuato troppi tentativi, riprova in seguito.\")\r\n                        setLoading(false)\r\n                        break;\r\n                    case \"User is not confirmed.\":\r\n                        navigate(\"/sendcodeverify\")\r\n                        setLoading(false)\r\n                        break;\r\n                    default:\r\n                        setAlert(false)\r\n                        setMessage('')\r\n                        setLoading(false)\r\n                        break;\r\n                }*/\r\n            }\r\n    }\r\n\r\n    //Funzione che si esegue quando clicchi il pulsante \"Crea un account\".\r\n    const onPressSignUp = () => {\r\n        navigate(\"/signup\")\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-container\">\r\n            <FormControl component=\"form\">\r\n                <Grid container rowSpacing={2} columnSpacing={1} display=\"flex\">\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\" align=\"center\" color=\"primary\" fontWeight=\"bold\">\r\n                            Accedi\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{display: !alert && \"none\"}}\r\n                        >\r\n                            <Typography \r\n                            variant=\"body2\">\r\n                                {message}\r\n                            </Typography>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                        autoComplete=\"email\"\r\n                        type=\"email\"  \r\n                        label=\"Email\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        onChange={onChangeEmail}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        autoComplete=\"current-password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        />\r\n                        <Grid container rowSpacing={1} columnSpacing={1}>\r\n                            <Grid item xs={4}>\r\n                                <FormControlLabel \r\n                                control={\r\n                                <Checkbox \r\n                                style={{transform: \"scale(0.8)\"}}\r\n                                onChange={onChangeRememberme}\r\n                                />\r\n                                } \r\n                                label={\r\n                                    <Typography \r\n                                    marginLeft=\"-5px\"\r\n                                    fontSize=\"15px\">\r\n                                        Ricordami\r\n                                    </Typography>\r\n                                }/>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Typography \r\n                                align=\"right\"\r\n                                variant=\"subtitle1\" \r\n                                fontSize=\"15px\"\r\n                                onClick={onClickForgotPassword}\r\n                                tabIndex={0}\r\n                                style={{cursor: \"pointer\", marginTop:\"9px\", marginRight: \"5px\", marginBottom: \"10px\"}}>\r\n                                    Hai dimenticato la password?\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container rowSpacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <LoadingButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\" \r\n                                fullWidth\r\n                                loading={loading}\r\n                                onClick={onPressSignIn}\r\n                                >\r\n                                    Effettua l'accesso\r\n                                </LoadingButton>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider>\r\n                                    <Typography \r\n                                    id=\"text_divider\" \r\n                                    variant=\"button\"\r\n                                    fontSize=\"12px\"\r\n                                    >\r\n                                        Oppure\r\n                                    </Typography>\r\n                                </Divider>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button \r\n                                id=\"signup_button\" \r\n                                variant=\"contained\" \r\n                                fullWidth\r\n                                onClick={onPressSignUp}\r\n                                >\r\n                                    Crea un account\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Progetto\\\\Frontend\\\\app_frontend\\\\src\\\\components\\\\topbarComponents\\\\ThemeButton.js\",\n  _s = $RefreshSig$();\nimport { ArrowDropDown, Language } from \"@mui/icons-material\";\nimport { Button, IconButton, Menu, MenuItem, Typography } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { lightenHexColor } from \"../../libs/utilFunctions\";\nimport { useState } from \"react\";\nimport \"/node_modules/flag-icons/css/flag-icons.min.css\";\nimport { loadingButtonClasses } from \"@mui/lab\";\nimport { lightTheme, darkTheme } from \"../../libs/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ThemeButton({\n  setThemeMode\n}) {\n  _s();\n  const theme = useTheme();\n  const onClickCambia = () => {\n    const themeMode = localStorage.getItem(\"themeMode\");\n    if (themeMode) {\n      if (themeMode === \"light\") {\n        setThemeMode(darkTheme);\n        window.localStorage.setItem(\"themeMode\", \"dark\");\n      } else {\n        setThemeMode(lightTheme);\n        window.localStorage.setItem(\"themeMode\", \"light\");\n      }\n    } else {\n      setThemeMode(darkTheme);\n      window.localStorage.setItem(\"themeMode\", \"dark\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: variant === \"desktop\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"contained\",\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(Language, {\n          style: {\n            color: lightenHexColor(theme.palette.primary.light, 40)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"left\",\n          style: {\n            position: \"absolute\",\n            zIndex: 10,\n            bottom: \"0px\",\n            right: \"0px\",\n            color: lightenHexColor(theme.palette.primary.light, 40),\n            fontSize: \"9px\",\n            textTransform: \"uppercase\"\n          },\n          children: selectedLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: anchorEl,\n        open: open,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => setLanguage(language.key),\n          children: [language.icon, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"button\",\n            style: {\n              color: theme.palette.primary.dark\n            },\n            children: language.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, language.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n}\n_s(ThemeButton, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeButton;\nexport default ThemeButton;\nvar _c;\n$RefreshReg$(_c, \"ThemeButton\");","map":{"version":3,"names":["ArrowDropDown","Language","Button","IconButton","Menu","MenuItem","Typography","useTheme","lightenHexColor","useState","loadingButtonClasses","lightTheme","darkTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeButton","setThemeMode","_s","theme","onClickCambia","themeMode","localStorage","getItem","window","setItem","children","variant","onClick","handleClick","style","color","palette","primary","light","fileName","_jsxFileName","lineNumber","columnNumber","align","position","zIndex","bottom","right","fontSize","textTransform","selectedLanguage","anchorEl","open","onClose","handleClose","anchorOrigin","vertical","horizontal","languages","map","language","setLanguage","key","icon","marginLeft","dark","text","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Progetto/Frontend/app_frontend/src/components/topbarComponents/ThemeButton.js"],"sourcesContent":["import { ArrowDropDown, Language } from \"@mui/icons-material\";\r\nimport { Button, IconButton, Menu, MenuItem, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport { lightenHexColor } from \"../../libs/utilFunctions\"\r\nimport { useState } from \"react\";\r\nimport \"/node_modules/flag-icons/css/flag-icons.min.css\";\r\nimport { loadingButtonClasses } from \"@mui/lab\";\r\nimport { lightTheme, darkTheme } from \"../../libs/theme\";\r\n\r\nfunction ThemeButton({setThemeMode}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const onClickCambia = () => {\r\n        const themeMode = localStorage.getItem(\"themeMode\");\r\n        if(themeMode){\r\n            if(themeMode === \"light\"){\r\n                setThemeMode(darkTheme);\r\n                window.localStorage.setItem(\"themeMode\", \"dark\");\r\n            }else{\r\n                setThemeMode(lightTheme);\r\n                window.localStorage.setItem(\"themeMode\", \"light\");\r\n            }\r\n        }else{\r\n            setThemeMode(darkTheme);\r\n            window.localStorage.setItem(\"themeMode\", \"dark\");\r\n        }\r\n    }\r\n\r\n    return(\r\n            <>\r\n            { variant === \"desktop\" ? (\r\n                <div>\r\n                    <IconButton\r\n                    variant=\"contained\"\r\n                    onClick={handleClick}\r\n                    >\r\n                        <Language style={{color: lightenHexColor(theme.palette.primary.light, 40)}}/>\r\n                        <Typography\r\n                        align=\"left\"\r\n                        style={{\r\n                            position: \"absolute\", \r\n                            zIndex: 10, \r\n                            bottom: \"0px\", \r\n                            right: \"0px\", \r\n                            color: lightenHexColor(theme.palette.primary.light, 40), \r\n                            fontSize: \"9px\",\r\n                            textTransform: \"uppercase\"\r\n                            }}>\r\n                            {selectedLanguage}\r\n                        </Typography>\r\n                    </IconButton>\r\n                    <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}>\r\n                        {languages.map((language) => (\r\n                            <MenuItem \r\n                            key={language.key}\r\n                            onClick={() => setLanguage(language.key)}\r\n                            >\r\n                                {language.icon}\r\n                                <div style={{marginLeft: \"5px\"}}/>\r\n                                <Typography\r\n                                variant=\"button\"\r\n                                style={{color: theme.palette.primary.dark}}>\r\n                                    {language.text}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Menu>\r\n                </div>\r\n                )\r\n                : \r\n                (<div></div>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThemeButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
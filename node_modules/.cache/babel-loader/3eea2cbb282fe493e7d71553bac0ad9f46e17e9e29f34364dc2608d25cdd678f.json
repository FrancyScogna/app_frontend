{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Progetto\\\\Frontend\\\\app_frontend\\\\src\\\\components\\\\authComponents\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, FormGroup, Grid, IconButton, InputAdornment, List, ListItem, ListItemText, TextField, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupForm() {\n  _s();\n  const navigate = useNavigate();\n\n  //Variabili per il settaggio e il controllo del nickname.\n  const [nickname, setNickname] = useState('');\n  const [showNicknameAlert, setShowNicknameAlert] = useState(false);\n  const [nicknameEmpty, setNicknameEmpty] = useState(true);\n\n  //Funzione per controllare il campo \"Nome utente\".\n  const onChangeNickname = event => {\n    const inputNickname = event.target.value;\n    const regex = /^[a-zA-Z0-9_.]+$/;\n    setNickname(inputNickname);\n    var valid = false;\n    var empty = true;\n    if (inputNickname === \"\") {\n      valid = false;\n      empty = true;\n    } else {\n      valid = regex.test(inputNickname) && inputNickname.length >= 5 && inputNickname.length <= 30;\n      empty = false;\n    }\n    if (empty) {\n      setShowNicknameAlert(false);\n      setNicknameEmpty(true);\n    } else {\n      if (valid) {\n        setShowNicknameAlert(false);\n        setNicknameEmpty(false);\n      } else {\n        setShowNicknameAlert(true);\n        setNicknameEmpty(false);\n      }\n    }\n  };\n\n  //Variabili per il settaggio e il controllo dell'email.\n  const [email, setEmail] = useState(\"\");\n  const [showEmailAlert, setShowEmailAlert] = useState(false);\n  const [emailEmpty, setEmailEmpty] = useState(true);\n\n  //Funzione per controllare il campo \"Email\".\n  const onChangeEmail = event => {\n    const inputEmail = event.target.value;\n    setEmail(inputEmail);\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    var valid;\n    var empty;\n    if (inputEmail === \"\") {\n      valid = false;\n      empty = true;\n    } else {\n      valid = emailRegex.test(inputEmail);\n      empty = false;\n    }\n    if (empty) {\n      setEmailEmpty(true);\n      setShowEmailAlert(false);\n    } else {\n      if (valid) {\n        setEmailEmpty(false);\n        setShowEmailAlert(false);\n      } else {\n        setEmailEmpty(false);\n        setShowEmailAlert(true);\n      }\n    }\n  };\n\n  //Variabili per il settaggio e il controllo della password.\n  const [password, setPassword] = useState(\"\");\n  const [showPasswordAlert, setShowPasswordAlert] = useState(false);\n  const [passwordEmpty, setPasswordEmpty] = useState(true);\n  const [passwordAlertMessage, setPasswordAlertMessage] = useState([]);\n\n  //Funzione per controllare il campo \"Password\".\n  const onChangePassword = event => {\n    const inputPassword = event.target.value;\n    setPassword(inputPassword);\n    const validatePassword = () => {\n      setPasswordAlertMessage([]);\n      const atLeastOneLowercaseLetter = /(?=.*[a-z])/;\n      const atLeastOneUppercaseLetter = /(?=.*[A-Z])/;\n      const atLeastOneDigit = /(?=.*\\d)/;\n      const atLeastOneSpecialChar = /(?=.*[$*{}()?!@#.%&><':;|_=+\\-,])/;\n      const validLength = /^.{8,20}$/;\n      const messages = [{\n        key: \"lowercaseLetter\",\n        message: \"La password deve contenere almeno una lettera minuscola.\",\n        visible: !atLeastOneLowercaseLetter.test(inputPassword)\n      }, {\n        key: \"uppercaseLetter\",\n        message: \"La password deve contenere almeno una lettera maiuscola.\",\n        visible: !atLeastOneUppercaseLetter.test(inputPassword)\n      }, {\n        key: \"digit\",\n        message: \"La password deve contenere almeno un numero.\",\n        visible: !atLeastOneDigit.test(inputPassword)\n      }, {\n        key: \"specialChar\",\n        message: \"La password deve contenere almeno un carattere speciale tra $*{}()?!@#.%&><':;|_=+-,.\",\n        visible: !atLeastOneSpecialChar.test(inputPassword)\n      }, {\n        key: \"validLength\",\n        message: \"La password deve avere una lunghezza minima di 8 caratteri e massima di 20 caratteri.\",\n        visible: !validLength.test(inputPassword)\n      }];\n      return messages;\n    };\n    const messages = validatePassword();\n    setPasswordAlertMessage(messages);\n    if (inputPassword === \"\") {\n      setShowPasswordAlert(false);\n      setPasswordEmpty(true);\n    } else {\n      const allConditionsSatisfied = messages.every(message => !message.visible);\n      setShowPasswordAlert(!allConditionsSatisfied);\n      setPasswordEmpty(false);\n    }\n    setRepeatPassword(\"\");\n    setShowRepeatPasswordAlert(false);\n    setRepeatPasswordEmpty(true);\n  };\n\n  //Variavili per il settaggio e il controllo del ripeti password.\n  const [showRepeatPasswordAlert, setShowRepeatPasswordAlert] = useState(false);\n  const [repeatPasswordEmpty, setRepeatPasswordEmpty] = useState(true);\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  //Funzione di controllo per il ripeti password.\n  const onChangeRepeatPassword = event => {\n    const inputRepeatPassword = event.target.value;\n    setRepeatPassword(inputRepeatPassword);\n    if (inputRepeatPassword === \"\") {\n      setRepeatPasswordEmpty(true);\n      setShowRepeatPasswordAlert(false);\n    } else {\n      if (inputRepeatPassword === password) {\n        setRepeatPasswordEmpty(false);\n        setShowRepeatPasswordAlert(false);\n      } else {\n        setRepeatPasswordEmpty(false);\n        setShowRepeatPasswordAlert(true);\n      }\n    }\n  };\n\n  //Variabile per il settaggio del checkbox \"Accetta i nostri termini e condizioni\".\n  const [termsAndConditions, setTermsAndConditions] = useState(false);\n\n  //Funzione per il settaggio del checkbox \"T&C\".\n  const onChangeTermsAndConditions = event => {\n    const checked = event.target.checked;\n    if (checked) {\n      setTermsAndConditions(true);\n    } else {\n      setTermsAndConditions(false);\n    }\n  };\n\n  //Variabile per il settaggio del checkbox \"Ho più di 18 anni\".\n  const [adult, setAdult] = useState(false);\n\n  //Funzione per il settaggio del checkbox \"Ho più di 18 anni\".\n  const onChangeAdult = event => {\n    const checked = event.target.checked;\n    if (checked) {\n      setAdult(true);\n    } else {\n      setAdult(false);\n    }\n  };\n\n  //Quando clicchi sulla scritta \"Hai già un account? Accedi\".\n  const onClickLogin = () => {\n    navigate(\"/\");\n  };\n\n  //Variabili per il bottone \"Effettua registrazione\" e per l'alert di eventuali errori\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  //Funzione che si attiva al click di \"Effettua Registrazione\" e verifica se è stato compilato il form correttamente\n  // AAA. Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\n  const onClickSignupLoadingButton = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setAlert(false);\n    setMessage([]);\n    const mainAlertMessages = () => {\n      setMessage([]);\n      const messages = [{\n        key: \"invalidError\",\n        message: \"Verifica che tutti i campi siano stati compilati correttamente.\",\n        visible: showNicknameAlert || showEmailAlert || showPasswordAlert || showRepeatPasswordAlert\n      }, {\n        key: \"emptyFormError\",\n        message: \"Verifica che i campi non siano vuoti.\",\n        visible: nicknameEmpty || emailEmpty || passwordEmpty || repeatPasswordEmpty\n      }, {\n        key: \"adultError\",\n        message: \"Devi confermare di avere almeno 18 anni.\",\n        visible: !adult\n      }, {\n        key: \"termsAndConditionsError\",\n        message: \"Devi accettare i nostri termini e condizioni.\",\n        visible: !termsAndConditions\n      }];\n      return messages;\n    };\n    const messages = mainAlertMessages();\n    const allConditionsSatisfied = messages.every(message => !message.visible);\n    if (!allConditionsSatisfied) {\n      setAlert(true);\n      setMessage(messages);\n      setLoading(false);\n    } else {\n      setAlert(false);\n      setMessage([]);\n      //Si procede con la registrazione da backend\n      /*\r\n      await Auth.signUp({\r\n          username: email,\r\n          password: password,\r\n          attributes: {\r\n            name: nickname\r\n          },\r\n          autoSignIn: {\r\n              enabled: true,\r\n          }\r\n      })\r\n      .then((data) => {\r\n        navigate(\"/verifyaccount\")\r\n      })\r\n      .catch((error) => {\r\n          setLoading(false)\r\n          setAlert(true)\r\n          switch (error.message) {\r\n              case \"Username should be an email.\":\r\n                  setAlert(true)\r\n                  setLoading(false)\r\n                  setMessage(\"L'email inserita non è valida\")\r\n                  break;\r\n              case \"Username cannot be empty\":\r\n                  setAlert(true)\r\n                  setLoading(false)\r\n                  setMessage(\"Il campo dell'email non può essere vuoto\")\r\n                  break;\r\n              case \"Password cannot be empty\":\r\n                  setAlert(true)\r\n                  setLoading(false)\r\n                  setMessage(\"Il campo della password non può essere vuoto\")\r\n                  break;\r\n              case \"An account with the given email already exists.\":\r\n                  setAlert(true)\r\n                  setLoading(false)\r\n                  setMessage(\"Esiste già un account con questa email\")\r\n                  break;\r\n              default:\r\n                  setMessage(\"\")\r\n                  setAlert(false)\r\n                  break;\r\n          }\r\n      })\r\n      */\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 2,\n        columnSpacing: 1,\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            color: \"primary\",\n            fontWeight: \"bold\",\n            children: \"Registrati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !alert && \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginLeft: \"-24px\",\n                marginTop: \"0px\",\n                marginBottom: \"0px\"\n              },\n              children: message.map(message => message.visible && /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"13px\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 33\n                }, this)\n              }, message.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"username\",\n            type: \"text\",\n            label: \"Nome utente\",\n            fullWidth: true,\n            onChange: onChangeNickname,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !showNicknameAlert && \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontSize: \"15px\",\n              children: \"Errore sul nome utente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginLeft: \"-24px\",\n                marginTop: \"0px\",\n                marginBottom: \"0px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"13px\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Deve contenere dai 5 ai 30 caratteri.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"13px\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Pu\\xF2 contenere solo lettere, numeri e i caratteri \\\"_\\\" e \\\".\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !showEmailAlert && \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontSize: \"15px\",\n              children: \"Formato email non valido.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"new-password\",\n            type: \"password\",\n            label: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !showPasswordAlert && \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontSize: \"15px\",\n              children: \"Errore sul formato della password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginLeft: \"-24px\",\n                marginTop: \"0px\",\n                marginBottom: \"0px\"\n              },\n              children: passwordAlertMessage.map(message => message.visible && /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"13px\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 33\n                }, this)\n              }, message.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"new-password\",\n            type: \"password\",\n            label: \"Ripeti la password\",\n            variant: \"outlined\",\n            value: repeatPassword,\n            fullWidth: true,\n            onChange: onChangeRepeatPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !showRepeatPasswordAlert && \"none\"\n            },\n            onChange: onChangeRepeatPassword,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontSize: \"15px\",\n              children: \"Le password non coincidono.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            style: {\n              marginBottom: \"-10px\"\n            },\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              style: {\n                transform: \"scale(0.8)\"\n              },\n              onChange: onChangeTermsAndConditions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 25\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              marginLeft: \"-5px\",\n              fontSize: \"15px\",\n              children: \"Accetta i nostri termini e condizioni.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              style: {\n                transform: \"scale(0.8)\"\n              },\n              onChange: onChangeAdult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 25\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              marginLeft: \"-5px\",\n              fontSize: \"15px\",\n              children: \"Ho pi\\xF9 di 18 anni.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                type: \"submit\",\n                id: \"signup_button\",\n                variant: \"contained\",\n                loading: loading,\n                fullWidth: true,\n                onClick: onClickSignupLoadingButton,\n                children: \"Effettua registrazione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"right\",\n                variant: \"subtitle1\",\n                fontSize: \"15px\",\n                tabIndex: 0,\n                onClick: onClickLogin,\n                style: {\n                  cursor: \"pointer\",\n                  marginTop: \"9px\",\n                  marginRight: \"5px\",\n                  marginBottom: \"10px\"\n                },\n                children: \"Hai gi\\xE0 un account? Effettua l'accesso.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 9\n  }, this);\n}\n_s(SignupForm, \"QVkRO7y70WE0uYoFyncWIqW2T5M=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["Alert","Button","Checkbox","Divider","FormControl","FormControlLabel","FormGroup","Grid","IconButton","InputAdornment","List","ListItem","ListItemText","TextField","Typography","LoadingButton","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","SignupForm","_s","navigate","nickname","setNickname","showNicknameAlert","setShowNicknameAlert","nicknameEmpty","setNicknameEmpty","onChangeNickname","event","inputNickname","target","value","regex","valid","empty","test","length","email","setEmail","showEmailAlert","setShowEmailAlert","emailEmpty","setEmailEmpty","onChangeEmail","inputEmail","emailRegex","password","setPassword","showPasswordAlert","setShowPasswordAlert","passwordEmpty","setPasswordEmpty","passwordAlertMessage","setPasswordAlertMessage","onChangePassword","inputPassword","validatePassword","atLeastOneLowercaseLetter","atLeastOneUppercaseLetter","atLeastOneDigit","atLeastOneSpecialChar","validLength","messages","key","message","visible","allConditionsSatisfied","every","setRepeatPassword","setShowRepeatPasswordAlert","setRepeatPasswordEmpty","showRepeatPasswordAlert","repeatPasswordEmpty","repeatPassword","onChangeRepeatPassword","inputRepeatPassword","termsAndConditions","setTermsAndConditions","onChangeTermsAndConditions","checked","adult","setAdult","onChangeAdult","onClickLogin","alert","setAlert","setMessage","loading","setLoading","onClickSignupLoadingButton","e","preventDefault","mainAlertMessages","className","children","component","container","rowSpacing","columnSpacing","display","item","xs","variant","align","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","severity","style","marginTop","marginLeft","marginBottom","map","fontSize","autoComplete","type","label","fullWidth","onChange","control","transform","id","onClick","tabIndex","cursor","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Progetto/Frontend/app_frontend/src/components/authComponents/SignupForm.js"],"sourcesContent":["import { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, FormGroup, Grid, IconButton, InputAdornment, List, ListItem, ListItemText, TextField, Typography } from \"@mui/material\";\r\nimport \"./styles.css\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction SignupForm(){\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Variabili per il settaggio e il controllo del nickname.\r\n    const [nickname, setNickname] = useState('');\r\n    const [showNicknameAlert, setShowNicknameAlert] = useState(false);\r\n    const [nicknameEmpty, setNicknameEmpty] = useState(true);\r\n\r\n    //Funzione per controllare il campo \"Nome utente\".\r\n    const onChangeNickname = (event) => {\r\n        const inputNickname = event.target.value;\r\n        const regex = /^[a-zA-Z0-9_.]+$/;\r\n        setNickname(inputNickname);\r\n        var valid = false;\r\n        var empty = true;\r\n        if(inputNickname === \"\"){\r\n            valid = false;\r\n            empty = true;\r\n        }else{\r\n            valid = regex.test(inputNickname) && inputNickname.length >= 5 && inputNickname.length <= 30;\r\n            empty = false;\r\n        }\r\n        \r\n        if(empty){\r\n            setShowNicknameAlert(false);\r\n            setNicknameEmpty(true);\r\n        }else{\r\n            if(valid){\r\n                setShowNicknameAlert(false);\r\n                setNicknameEmpty(false);\r\n            }else{\r\n                setShowNicknameAlert(true);\r\n                setNicknameEmpty(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    //Variabili per il settaggio e il controllo dell'email.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [showEmailAlert, setShowEmailAlert] = useState(false);\r\n    const [emailEmpty, setEmailEmpty] = useState(true);\r\n\r\n    //Funzione per controllare il campo \"Email\".\r\n    const onChangeEmail = (event) => {\r\n        const inputEmail = event.target.value;\r\n        setEmail(inputEmail);\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        var valid;\r\n        var empty;\r\n\r\n        if(inputEmail === \"\"){\r\n            valid = false;\r\n            empty = true;\r\n        }else{\r\n            valid = emailRegex.test(inputEmail);\r\n            empty = false;\r\n        }\r\n        \r\n        if(empty){\r\n            setEmailEmpty(true);\r\n            setShowEmailAlert(false);\r\n        }else{\r\n            if(valid){\r\n                setEmailEmpty(false);\r\n                setShowEmailAlert(false);\r\n            }else{\r\n                setEmailEmpty(false);\r\n                setShowEmailAlert(true);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Variabili per il settaggio e il controllo della password.\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showPasswordAlert, setShowPasswordAlert] = useState(false);\r\n    const [passwordEmpty, setPasswordEmpty] = useState(true);\r\n    const [passwordAlertMessage, setPasswordAlertMessage] = useState([]);\r\n\r\n    //Funzione per controllare il campo \"Password\".\r\n    const onChangePassword = (event) => {\r\n        const inputPassword = event.target.value;\r\n        setPassword(inputPassword);\r\n\r\n        const validatePassword = () => {\r\n            setPasswordAlertMessage([])\r\n            const atLeastOneLowercaseLetter = /(?=.*[a-z])/;\r\n            const atLeastOneUppercaseLetter = /(?=.*[A-Z])/;\r\n            const atLeastOneDigit = /(?=.*\\d)/;\r\n            const atLeastOneSpecialChar = /(?=.*[$*{}()?!@#.%&><':;|_=+\\-,])/;\r\n            const validLength = /^.{8,20}$/;\r\n            const messages = [\r\n                { key: \"lowercaseLetter\", message: \"La password deve contenere almeno una lettera minuscola.\", visible: !atLeastOneLowercaseLetter.test(inputPassword) },\r\n                { key: \"uppercaseLetter\", message: \"La password deve contenere almeno una lettera maiuscola.\", visible: !atLeastOneUppercaseLetter.test(inputPassword) },\r\n                { key: \"digit\", message: \"La password deve contenere almeno un numero.\", visible: !atLeastOneDigit.test(inputPassword) },\r\n                { key: \"specialChar\", message: \"La password deve contenere almeno un carattere speciale tra $*{}()?!@#.%&><':;|_=+-,.\", visible: !atLeastOneSpecialChar.test(inputPassword) },\r\n                { key: \"validLength\", message: \"La password deve avere una lunghezza minima di 8 caratteri e massima di 20 caratteri.\", visible: !validLength.test(inputPassword) }\r\n            ];\r\n            return messages;\r\n        };\r\n\r\n        const messages = validatePassword();\r\n        setPasswordAlertMessage(messages);\r\n\r\n        if (inputPassword === \"\") {\r\n            setShowPasswordAlert(false);\r\n            setPasswordEmpty(true);\r\n        }else {\r\n            const allConditionsSatisfied = messages.every((message) => !message.visible);\r\n            setShowPasswordAlert(!allConditionsSatisfied);\r\n            setPasswordEmpty(false);\r\n        }\r\n        setRepeatPassword(\"\");\r\n        setShowRepeatPasswordAlert(false);\r\n        setRepeatPasswordEmpty(true);\r\n    }\r\n\r\n    //Variavili per il settaggio e il controllo del ripeti password.\r\n    const [showRepeatPasswordAlert, setShowRepeatPasswordAlert] = useState(false);\r\n    const [repeatPasswordEmpty, setRepeatPasswordEmpty] = useState(true);\r\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n\r\n    //Funzione di controllo per il ripeti password.\r\n    const onChangeRepeatPassword = (event) => {\r\n        const inputRepeatPassword = event.target.value;\r\n        setRepeatPassword(inputRepeatPassword);\r\n\r\n        if(inputRepeatPassword === \"\"){\r\n            setRepeatPasswordEmpty(true);\r\n            setShowRepeatPasswordAlert(false);\r\n        }else{\r\n            if(inputRepeatPassword === password){\r\n                setRepeatPasswordEmpty(false);\r\n                setShowRepeatPasswordAlert(false);\r\n            }else{\r\n                setRepeatPasswordEmpty(false);\r\n                setShowRepeatPasswordAlert(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Variabile per il settaggio del checkbox \"Accetta i nostri termini e condizioni\".\r\n    const [termsAndConditions, setTermsAndConditions] = useState(false);\r\n\r\n    //Funzione per il settaggio del checkbox \"T&C\".\r\n    const onChangeTermsAndConditions = (event) => {\r\n        const checked = event.target.checked;\r\n        if(checked){\r\n            setTermsAndConditions(true);\r\n        }else{\r\n            setTermsAndConditions(false);\r\n        }\r\n    }\r\n\r\n    //Variabile per il settaggio del checkbox \"Ho più di 18 anni\".\r\n    const [adult, setAdult] = useState(false);\r\n\r\n    //Funzione per il settaggio del checkbox \"Ho più di 18 anni\".\r\n    const onChangeAdult = (event) => {\r\n        const checked = event.target.checked;\r\n        if(checked){\r\n            setAdult(true);\r\n        }else{\r\n            setAdult(false);\r\n        }\r\n    }\r\n\r\n    //Quando clicchi sulla scritta \"Hai già un account? Accedi\".\r\n    const onClickLogin = () => {\r\n        navigate(\"/\");\r\n    }\r\n\r\n    //Variabili per il bottone \"Effettua registrazione\" e per l'alert di eventuali errori\r\n    const [alert, setAlert] = useState(false);\r\n    const [message, setMessage] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Funzione che si attiva al click di \"Effettua Registrazione\" e verifica se è stato compilato il form correttamente\r\n    // AAA. Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\r\n    const onClickSignupLoadingButton = async(e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setAlert(false);\r\n        setMessage([]);\r\n\r\n        const mainAlertMessages = () => {\r\n            setMessage([])\r\n            const messages = [\r\n                { key: \"invalidError\", message: \"Verifica che tutti i campi siano stati compilati correttamente.\", visible: showNicknameAlert || showEmailAlert || showPasswordAlert || showRepeatPasswordAlert },\r\n                { key: \"emptyFormError\", message: \"Verifica che i campi non siano vuoti.\", visible: nicknameEmpty || emailEmpty || passwordEmpty || repeatPasswordEmpty },\r\n                { key: \"adultError\", message: \"Devi confermare di avere almeno 18 anni.\", visible: !adult },\r\n                { key: \"termsAndConditionsError\", message: \"Devi accettare i nostri termini e condizioni.\", visible: !termsAndConditions }             \r\n            ];\r\n            return messages;\r\n        };\r\n\r\n        const messages = mainAlertMessages();\r\n        const allConditionsSatisfied = messages.every((message) => !message.visible);\r\n\r\n        if(!allConditionsSatisfied){\r\n            setAlert(true);\r\n            setMessage(messages);\r\n            setLoading(false);\r\n        }else{\r\n            setAlert(false);\r\n            setMessage([]);\r\n            //Si procede con la registrazione da backend\r\n            /*\r\n            await Auth.signUp({\r\n                username: email,\r\n                password: password,\r\n                attributes: {\r\n                  name: nickname\r\n                },\r\n                autoSignIn: {\r\n                    enabled: true,\r\n                }\r\n            })\r\n            .then((data) => {\r\n              navigate(\"/verifyaccount\")\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                setAlert(true)\r\n                switch (error.message) {\r\n                    case \"Username should be an email.\":\r\n                        setAlert(true)\r\n                        setLoading(false)\r\n                        setMessage(\"L'email inserita non è valida\")\r\n                        break;\r\n                    case \"Username cannot be empty\":\r\n                        setAlert(true)\r\n                        setLoading(false)\r\n                        setMessage(\"Il campo dell'email non può essere vuoto\")\r\n                        break;\r\n                    case \"Password cannot be empty\":\r\n                        setAlert(true)\r\n                        setLoading(false)\r\n                        setMessage(\"Il campo della password non può essere vuoto\")\r\n                        break;\r\n                    case \"An account with the given email already exists.\":\r\n                        setAlert(true)\r\n                        setLoading(false)\r\n                        setMessage(\"Esiste già un account con questa email\")\r\n                        break;\r\n                    default:\r\n                        setMessage(\"\")\r\n                        setAlert(false)\r\n                        break;\r\n                }\r\n            })\r\n            */\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"signup-container\">\r\n            <FormControl component=\"form\">\r\n                <Grid container rowSpacing={2} columnSpacing={1} display=\"flex\">\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\" align=\"center\" color=\"primary\" fontWeight=\"bold\">\r\n                            Registrati\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !alert && \"none\"}}\r\n                        >\r\n                            <ul style={{marginLeft: \"-24px\", marginTop: \"0px\", marginBottom: \"0px\"}}>\r\n                            {message.map((message) => (\r\n                                message.visible && (\r\n                                <Typography key={message.key} fontSize=\"13px\">\r\n                                <li>{message.message}</li>\r\n                                </Typography>\r\n                                )\r\n                            ))}\r\n                            </ul>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                        autoComplete=\"username\"\r\n                        type=\"text\"\r\n                        label=\"Nome utente\"\r\n                        fullWidth\r\n                        onChange={onChangeNickname}\r\n                        variant=\"outlined\" />\r\n                        \r\n                        <Alert \r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !showNicknameAlert && \"none\"}}\r\n                        >\r\n                            <Typography fontSize=\"15px\">Errore sul nome utente:</Typography>\r\n                            <ul style={{marginLeft: \"-24px\", marginTop: \"0px\", marginBottom: \"0px\"}}>\r\n                            <Typography fontSize=\"13px\">\r\n                                <li>Deve contenere dai 5 ai 30 caratteri.</li> \r\n                            </Typography>\r\n                            <Typography fontSize=\"13px\">\r\n                                <li>Può contenere solo lettere, numeri e i caratteri \"_\" e \".\"</li>\r\n                            </Typography>\r\n                            </ul>\r\n                        </Alert>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                        autoComplete=\"email\"\r\n                        type=\"email\"  \r\n                        label=\"Email\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        onChange={onChangeEmail}\r\n                        />\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !showEmailAlert && \"none\"}}\r\n                        >\r\n                            <Typography fontSize=\"15px\">Formato email non valido.</Typography>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        autoComplete=\"new-password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={onChangePassword}\r\n                        />\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !showPasswordAlert && \"none\"}}\r\n                        >\r\n                            <Typography fontSize=\"15px\">Errore sul formato della password:</Typography>\r\n                            <ul style={{marginLeft: \"-24px\", marginTop: \"0px\", marginBottom: \"0px\"}}>\r\n                            {passwordAlertMessage.map((message) => (\r\n                                message.visible && (\r\n                                <Typography key={message.key} fontSize=\"13px\">\r\n                                <li>{message.message}</li>\r\n                                </Typography>\r\n                                )\r\n                            ))}\r\n                            </ul>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        autoComplete=\"new-password\"\r\n                        type=\"password\"\r\n                        label=\"Ripeti la password\"\r\n                        variant=\"outlined\"\r\n                        value={repeatPassword}\r\n                        fullWidth\r\n                        onChange={onChangeRepeatPassword}\r\n                        />\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !showRepeatPasswordAlert && \"none\"}}\r\n                        onChange={onChangeRepeatPassword}\r\n                        >\r\n                            <Typography fontSize=\"15px\">Le password non coincidono.</Typography>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel \r\n                        style={{marginBottom: \"-10px\"}}\r\n                        control={\r\n                        <Checkbox \r\n                        style={{transform: \"scale(0.8)\"}}\r\n                        onChange={onChangeTermsAndConditions}\r\n                        />\r\n                        }\r\n                        label={\r\n                            <Typography \r\n                            marginLeft=\"-5px\"\r\n                            fontSize=\"15px\">\r\n                                Accetta i nostri termini e condizioni.\r\n                            </Typography>\r\n                        }/>\r\n                        <FormControlLabel \r\n                        control={\r\n                        <Checkbox \r\n                        style={{transform: \"scale(0.8)\"}}\r\n                        onChange={onChangeAdult}\r\n                        />\r\n                        } \r\n                        label={\r\n                            <Typography \r\n                            marginLeft=\"-5px\"\r\n                            fontSize=\"15px\">\r\n                                Ho più di 18 anni.\r\n                            </Typography>\r\n                        }/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container >\r\n                            <Grid item xs={12}>\r\n                                <LoadingButton \r\n                                type=\"submit\"\r\n                                id=\"signup_button\" \r\n                                variant=\"contained\"\r\n                                loading={loading}\r\n                                fullWidth\r\n                                onClick={onClickSignupLoadingButton}\r\n                                >\r\n                                    Effettua registrazione\r\n                                </LoadingButton>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography \r\n                                align=\"right\"\r\n                                variant=\"subtitle1\" \r\n                                fontSize=\"15px\"\r\n                                tabIndex={0}\r\n                                onClick={onClickLogin}\r\n                                style={{cursor: \"pointer\", marginTop:\"9px\", marginRight: \"5px\", marginBottom: \"10px\"}}>\r\n                                    Hai già un account? Effettua l'accesso.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupForm;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,cAAc,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACjM,OAAO,cAAc;AACrB,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACxC,MAAMC,KAAK,GAAG,kBAAkB;IAChCV,WAAW,CAACO,aAAa,CAAC;IAC1B,IAAII,KAAK,GAAG,KAAK;IACjB,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAGL,aAAa,KAAK,EAAE,EAAC;MACpBI,KAAK,GAAG,KAAK;MACbC,KAAK,GAAG,IAAI;IAChB,CAAC,MAAI;MACDD,KAAK,GAAGD,KAAK,CAACG,IAAI,CAACN,aAAa,CAAC,IAAIA,aAAa,CAACO,MAAM,IAAI,CAAC,IAAIP,aAAa,CAACO,MAAM,IAAI,EAAE;MAC5FF,KAAK,GAAG,KAAK;IACjB;IAEA,IAAGA,KAAK,EAAC;MACLV,oBAAoB,CAAC,KAAK,CAAC;MAC3BE,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAI;MACD,IAAGO,KAAK,EAAC;QACLT,oBAAoB,CAAC,KAAK,CAAC;QAC3BE,gBAAgB,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAI;QACDF,oBAAoB,CAAC,IAAI,CAAC;QAC1BE,gBAAgB,CAAC,KAAK,CAAC;MAC3B;IACJ;EACJ,CAAC;;EAED;EACA,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAM6B,aAAa,GAAIf,KAAK,IAAK;IAC7B,MAAMgB,UAAU,GAAGhB,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCO,QAAQ,CAACM,UAAU,CAAC;IACpB,MAAMC,UAAU,GAAG,4BAA4B;IAE/C,IAAIZ,KAAK;IACT,IAAIC,KAAK;IAET,IAAGU,UAAU,KAAK,EAAE,EAAC;MACjBX,KAAK,GAAG,KAAK;MACbC,KAAK,GAAG,IAAI;IAChB,CAAC,MAAI;MACDD,KAAK,GAAGY,UAAU,CAACV,IAAI,CAACS,UAAU,CAAC;MACnCV,KAAK,GAAG,KAAK;IACjB;IAEA,IAAGA,KAAK,EAAC;MACLQ,aAAa,CAAC,IAAI,CAAC;MACnBF,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MAAI;MACD,IAAGP,KAAK,EAAC;QACLS,aAAa,CAAC,KAAK,CAAC;QACpBF,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,MAAI;QACDE,aAAa,CAAC,KAAK,CAAC;QACpBF,iBAAiB,CAAC,IAAI,CAAC;MAC3B;IACJ;EAEJ,CAAC;;EAGD;EACA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;;EAEpE;EACA,MAAMwC,gBAAgB,GAAI1B,KAAK,IAAK;IAChC,MAAM2B,aAAa,GAAG3B,KAAK,CAACE,MAAM,CAACC,KAAK;IACxCgB,WAAW,CAACQ,aAAa,CAAC;IAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC3BH,uBAAuB,CAAC,EAAE,CAAC;MAC3B,MAAMI,yBAAyB,GAAG,aAAa;MAC/C,MAAMC,yBAAyB,GAAG,aAAa;MAC/C,MAAMC,eAAe,GAAG,UAAU;MAClC,MAAMC,qBAAqB,GAAG,mCAAmC;MACjE,MAAMC,WAAW,GAAG,WAAW;MAC/B,MAAMC,QAAQ,GAAG,CACb;QAAEC,GAAG,EAAE,iBAAiB;QAAEC,OAAO,EAAE,0DAA0D;QAAEC,OAAO,EAAE,CAACR,yBAAyB,CAACtB,IAAI,CAACoB,aAAa;MAAE,CAAC,EACxJ;QAAEQ,GAAG,EAAE,iBAAiB;QAAEC,OAAO,EAAE,0DAA0D;QAAEC,OAAO,EAAE,CAACP,yBAAyB,CAACvB,IAAI,CAACoB,aAAa;MAAE,CAAC,EACxJ;QAAEQ,GAAG,EAAE,OAAO;QAAEC,OAAO,EAAE,8CAA8C;QAAEC,OAAO,EAAE,CAACN,eAAe,CAACxB,IAAI,CAACoB,aAAa;MAAE,CAAC,EACxH;QAAEQ,GAAG,EAAE,aAAa;QAAEC,OAAO,EAAE,uFAAuF;QAAEC,OAAO,EAAE,CAACL,qBAAqB,CAACzB,IAAI,CAACoB,aAAa;MAAE,CAAC,EAC7K;QAAEQ,GAAG,EAAE,aAAa;QAAEC,OAAO,EAAE,uFAAuF;QAAEC,OAAO,EAAE,CAACJ,WAAW,CAAC1B,IAAI,CAACoB,aAAa;MAAE,CAAC,CACtK;MACD,OAAOO,QAAQ;IACnB,CAAC;IAED,MAAMA,QAAQ,GAAGN,gBAAgB,CAAC,CAAC;IACnCH,uBAAuB,CAACS,QAAQ,CAAC;IAEjC,IAAIP,aAAa,KAAK,EAAE,EAAE;MACtBN,oBAAoB,CAAC,KAAK,CAAC;MAC3BE,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAK;MACF,MAAMe,sBAAsB,GAAGJ,QAAQ,CAACK,KAAK,CAAEH,OAAO,IAAK,CAACA,OAAO,CAACC,OAAO,CAAC;MAC5EhB,oBAAoB,CAAC,CAACiB,sBAAsB,CAAC;MAC7Cf,gBAAgB,CAAC,KAAK,CAAC;IAC3B;IACAiB,iBAAiB,CAAC,EAAE,CAAC;IACrBC,0BAA0B,CAAC,KAAK,CAAC;IACjCC,sBAAsB,CAAC,IAAI,CAAC;EAChC,CAAC;;EAED;EACA,MAAM,CAACC,uBAAuB,EAAEF,0BAA0B,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAAC0D,mBAAmB,EAAEF,sBAAsB,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAAC2D,cAAc,EAAEL,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM4D,sBAAsB,GAAI9C,KAAK,IAAK;IACtC,MAAM+C,mBAAmB,GAAG/C,KAAK,CAACE,MAAM,CAACC,KAAK;IAC9CqC,iBAAiB,CAACO,mBAAmB,CAAC;IAEtC,IAAGA,mBAAmB,KAAK,EAAE,EAAC;MAC1BL,sBAAsB,CAAC,IAAI,CAAC;MAC5BD,0BAA0B,CAAC,KAAK,CAAC;IACrC,CAAC,MAAI;MACD,IAAGM,mBAAmB,KAAK7B,QAAQ,EAAC;QAChCwB,sBAAsB,CAAC,KAAK,CAAC;QAC7BD,0BAA0B,CAAC,KAAK,CAAC;MACrC,CAAC,MAAI;QACDC,sBAAsB,CAAC,KAAK,CAAC;QAC7BD,0BAA0B,CAAC,IAAI,CAAC;MACpC;IACJ;EACJ,CAAC;;EAED;EACA,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;;EAEnE;EACA,MAAMgE,0BAA0B,GAAIlD,KAAK,IAAK;IAC1C,MAAMmD,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;IACpC,IAAGA,OAAO,EAAC;MACPF,qBAAqB,CAAC,IAAI,CAAC;IAC/B,CAAC,MAAI;MACDA,qBAAqB,CAAC,KAAK,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMoE,aAAa,GAAItD,KAAK,IAAK;IAC7B,MAAMmD,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;IACpC,IAAGA,OAAO,EAAC;MACPE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,MAAI;MACDA,QAAQ,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB/D,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;;EAED;EACA,MAAM,CAACgE,KAAK,EAAEC,QAAQ,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACkD,OAAO,EAAEsB,UAAU,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyE,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACA,MAAM2E,0BAA0B,GAAG,MAAMC,CAAC,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,UAAU,CAAC,IAAI,CAAC;IAChBH,QAAQ,CAAC,KAAK,CAAC;IACfC,UAAU,CAAC,EAAE,CAAC;IAEd,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;MAC5BN,UAAU,CAAC,EAAE,CAAC;MACd,MAAMxB,QAAQ,GAAG,CACb;QAAEC,GAAG,EAAE,cAAc;QAAEC,OAAO,EAAE,iEAAiE;QAAEC,OAAO,EAAE1C,iBAAiB,IAAIgB,cAAc,IAAIS,iBAAiB,IAAIuB;MAAwB,CAAC,EACjM;QAAER,GAAG,EAAE,gBAAgB;QAAEC,OAAO,EAAE,uCAAuC;QAAEC,OAAO,EAAExC,aAAa,IAAIgB,UAAU,IAAIS,aAAa,IAAIsB;MAAoB,CAAC,EACzJ;QAAET,GAAG,EAAE,YAAY;QAAEC,OAAO,EAAE,0CAA0C;QAAEC,OAAO,EAAE,CAACe;MAAM,CAAC,EAC3F;QAAEjB,GAAG,EAAE,yBAAyB;QAAEC,OAAO,EAAE,+CAA+C;QAAEC,OAAO,EAAE,CAACW;MAAmB,CAAC,CAC7H;MACD,OAAOd,QAAQ;IACnB,CAAC;IAED,MAAMA,QAAQ,GAAG8B,iBAAiB,CAAC,CAAC;IACpC,MAAM1B,sBAAsB,GAAGJ,QAAQ,CAACK,KAAK,CAAEH,OAAO,IAAK,CAACA,OAAO,CAACC,OAAO,CAAC;IAE5E,IAAG,CAACC,sBAAsB,EAAC;MACvBmB,QAAQ,CAAC,IAAI,CAAC;MACdC,UAAU,CAACxB,QAAQ,CAAC;MACpB0B,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAI;MACDH,QAAQ,CAAC,KAAK,CAAC;MACfC,UAAU,CAAC,EAAE,CAAC;MACd;MACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ;EACJ,CAAC;;EAED,oBACIrE,OAAA;IAAK4E,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7B7E,OAAA,CAAChB,WAAW;MAAC8F,SAAS,EAAC,MAAM;MAAAD,QAAA,eACzB7E,OAAA,CAACb,IAAI;QAAC4F,SAAS;QAACC,UAAU,EAAE,CAAE;QAACC,aAAa,EAAE,CAAE;QAACC,OAAO,EAAC,MAAM;QAAAL,QAAA,gBAC3D7E,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,eACd7E,OAAA,CAACN,UAAU;YAAC2F,OAAO,EAAC,IAAI;YAACC,KAAK,EAAC,QAAQ;YAACC,KAAK,EAAC,SAAS;YAACC,UAAU,EAAC,MAAM;YAAAX,QAAA,EAAC;UAE1E;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,eACd7E,OAAA,CAACpB,KAAK;YACNiH,QAAQ,EAAC,OAAO;YAChBC,KAAK,EAAE;cAACC,SAAS,EAAE,KAAK;cAAEb,OAAO,EAAE,CAACf,KAAK,IAAI;YAAM,CAAE;YAAAU,QAAA,eAEjD7E,OAAA;cAAI8F,KAAK,EAAE;gBAACE,UAAU,EAAE,OAAO;gBAAED,SAAS,EAAE,KAAK;gBAAEE,YAAY,EAAE;cAAK,CAAE;cAAApB,QAAA,EACvE9B,OAAO,CAACmD,GAAG,CAAEnD,OAAO,IACjBA,OAAO,CAACC,OAAO,iBACfhD,OAAA,CAACN,UAAU;gBAAmByG,QAAQ,EAAC,MAAM;gBAAAtB,QAAA,eAC7C7E,OAAA;kBAAA6E,QAAA,EAAK9B,OAAO,CAACA;gBAAO;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC,GADT7C,OAAO,CAACD,GAAG;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CAEf;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,gBACd7E,OAAA,CAACP,SAAS;YACV2G,YAAY,EAAC,UAAU;YACvBC,IAAI,EAAC,MAAM;YACXC,KAAK,EAAC,aAAa;YACnBC,SAAS;YACTC,QAAQ,EAAE9F,gBAAiB;YAC3B2E,OAAO,EAAC;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAErB5F,OAAA,CAACpB,KAAK;YACNiH,QAAQ,EAAC,OAAO;YAChBC,KAAK,EAAE;cAACC,SAAS,EAAE,KAAK;cAAEb,OAAO,EAAE,CAAC5E,iBAAiB,IAAI;YAAM,CAAE;YAAAuE,QAAA,gBAE7D7E,OAAA,CAACN,UAAU;cAACyG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAAuB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChE5F,OAAA;cAAI8F,KAAK,EAAE;gBAACE,UAAU,EAAE,OAAO;gBAAED,SAAS,EAAE,KAAK;gBAAEE,YAAY,EAAE;cAAK,CAAE;cAAApB,QAAA,gBACxE7E,OAAA,CAACN,UAAU;gBAACyG,QAAQ,EAAC,MAAM;gBAAAtB,QAAA,eACvB7E,OAAA;kBAAA6E,QAAA,EAAI;gBAAqC;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACb5F,OAAA,CAACN,UAAU;gBAACyG,QAAQ,EAAC,MAAM;gBAAAtB,QAAA,eACvB7E,OAAA;kBAAA6E,QAAA,EAAI;gBAA0D;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,gBACd7E,OAAA,CAACP,SAAS;YACV2G,YAAY,EAAC,OAAO;YACpBC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAC,OAAO;YACbjB,OAAO,EAAC,UAAU;YAClBkB,SAAS;YACTC,QAAQ,EAAE9E;UAAc;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACF5F,OAAA,CAACpB,KAAK;YACNiH,QAAQ,EAAC,OAAO;YAChBC,KAAK,EAAE;cAACC,SAAS,EAAE,KAAK;cAAEb,OAAO,EAAE,CAAC5D,cAAc,IAAI;YAAM,CAAE;YAAAuD,QAAA,eAE1D7E,OAAA,CAACN,UAAU;cAACyG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAAyB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,gBACd7E,OAAA,CAACP,SAAS;YACV2G,YAAY,EAAC,cAAc;YAC3BC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,UAAU;YAChBjB,OAAO,EAAC,UAAU;YAClBkB,SAAS;YACTC,QAAQ,EAAEnE;UAAiB;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACF5F,OAAA,CAACpB,KAAK;YACNiH,QAAQ,EAAC,OAAO;YAChBC,KAAK,EAAE;cAACC,SAAS,EAAE,KAAK;cAAEb,OAAO,EAAE,CAACnD,iBAAiB,IAAI;YAAM,CAAE;YAAA8C,QAAA,gBAE7D7E,OAAA,CAACN,UAAU;cAACyG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAAkC;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC3E5F,OAAA;cAAI8F,KAAK,EAAE;gBAACE,UAAU,EAAE,OAAO;gBAAED,SAAS,EAAE,KAAK;gBAAEE,YAAY,EAAE;cAAK,CAAE;cAAApB,QAAA,EACvE1C,oBAAoB,CAAC+D,GAAG,CAAEnD,OAAO,IAC9BA,OAAO,CAACC,OAAO,iBACfhD,OAAA,CAACN,UAAU;gBAAmByG,QAAQ,EAAC,MAAM;gBAAAtB,QAAA,eAC7C7E,OAAA;kBAAA6E,QAAA,EAAK9B,OAAO,CAACA;gBAAO;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC,GADT7C,OAAO,CAACD,GAAG;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CAEf;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,gBACd7E,OAAA,CAACP,SAAS;YACV2G,YAAY,EAAC,cAAc;YAC3BC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,oBAAoB;YAC1BjB,OAAO,EAAC,UAAU;YAClBvE,KAAK,EAAE0C,cAAe;YACtB+C,SAAS;YACTC,QAAQ,EAAE/C;UAAuB;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACF5F,OAAA,CAACpB,KAAK;YACNiH,QAAQ,EAAC,OAAO;YAChBC,KAAK,EAAE;cAACC,SAAS,EAAE,KAAK;cAAEb,OAAO,EAAE,CAAC5B,uBAAuB,IAAI;YAAM,CAAE;YACvEkD,QAAQ,EAAE/C,sBAAuB;YAAAoB,QAAA,eAE7B7E,OAAA,CAACN,UAAU;cAACyG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAA2B;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,gBACd7E,OAAA,CAACf,gBAAgB;YACjB6G,KAAK,EAAE;cAACG,YAAY,EAAE;YAAO,CAAE;YAC/BQ,OAAO,eACPzG,OAAA,CAAClB,QAAQ;cACTgH,KAAK,EAAE;gBAACY,SAAS,EAAE;cAAY,CAAE;cACjCF,QAAQ,EAAE3C;YAA2B;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CACA;YACDU,KAAK,eACDtG,OAAA,CAACN,UAAU;cACXsG,UAAU,EAAC,MAAM;cACjBG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAEhB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UACf;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACH5F,OAAA,CAACf,gBAAgB;YACjBwH,OAAO,eACPzG,OAAA,CAAClB,QAAQ;cACTgH,KAAK,EAAE;gBAACY,SAAS,EAAE;cAAY,CAAE;cACjCF,QAAQ,EAAEvC;YAAc;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CACA;YACDU,KAAK,eACDtG,OAAA,CAACN,UAAU;cACXsG,UAAU,EAAC,MAAM;cACjBG,QAAQ,EAAC,MAAM;cAAAtB,QAAA,EAAC;YAEhB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UACf;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACP5F,OAAA,CAACb,IAAI;UAACgG,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAP,QAAA,eACd7E,OAAA,CAACb,IAAI;YAAC4F,SAAS;YAAAF,QAAA,gBACX7E,OAAA,CAACb,IAAI;cAACgG,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAP,QAAA,eACd7E,OAAA,CAACL,aAAa;gBACd0G,IAAI,EAAC,QAAQ;gBACbM,EAAE,EAAC,eAAe;gBAClBtB,OAAO,EAAC,WAAW;gBACnBf,OAAO,EAAEA,OAAQ;gBACjBiC,SAAS;gBACTK,OAAO,EAAEpC,0BAA2B;gBAAAK,QAAA,EACnC;cAED;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAe;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eACP5F,OAAA,CAACb,IAAI;cAACgG,IAAI;cAACC,EAAE,EAAE,EAAG;cAAAP,QAAA,eACd7E,OAAA,CAACN,UAAU;gBACX4F,KAAK,EAAC,OAAO;gBACbD,OAAO,EAAC,WAAW;gBACnBc,QAAQ,EAAC,MAAM;gBACfU,QAAQ,EAAE,CAAE;gBACZD,OAAO,EAAE1C,YAAa;gBACtB4B,KAAK,EAAE;kBAACgB,MAAM,EAAE,SAAS;kBAAEf,SAAS,EAAC,KAAK;kBAAEgB,WAAW,EAAE,KAAK;kBAAEd,YAAY,EAAE;gBAAM,CAAE;gBAAApB,QAAA,EAAC;cAEvF;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd;AAAC1F,EAAA,CA7aQD,UAAU;EAAA,QAEEH,WAAW;AAAA;AAAAkH,EAAA,GAFvB/G,UAAU;AA+anB,eAAeA,UAAU;AAAC,IAAA+G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
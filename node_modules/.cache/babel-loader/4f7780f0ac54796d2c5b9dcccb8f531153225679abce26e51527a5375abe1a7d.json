{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Progetto\\\\Frontend\\\\app_frontend\\\\src\\\\components\\\\authComponents\\\\ForgotPasswordForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, Grid, Snackbar, TextField, Typography, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordForm() {\n  _s();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const email = localStorage.getItem(\"email\");\n  useEffect(() => {\n    if (!email) {\n      navigate(\"/\");\n    }\n  }, [email]);\n\n  //Variabili per il settaggio e il controllo sul codice inserito.\n  const [code, setCode] = useState(\"\");\n  const [codeEmpty, setCodeEmpty] = useState(true);\n  const [codeValid, setCodeValid] = useState(false);\n  const [resendCodeAlert, setResendCodeAlert] = useState(false);\n\n  //Funzione per il controllo della validità e il settaggio del codice.\n  const onChangeCode = event => {\n    const inputCode = event.target.value;\n    setCode(inputCode);\n    const containsOnlyNumbers = /^\\d+$/.test(inputCode);\n    if (inputCode === \"\") {\n      setCodeEmpty(true);\n    } else {\n      setCodeEmpty(false);\n      if (containsOnlyNumbers) {\n        setCodeValid(true);\n      } else {\n        setCodeValid(false);\n      }\n    }\n  };\n\n  //Funzione che si esegue quando clicchi sul testo \"Non hai ricevuto il codice? Rinvia codice\".\n  const onClickResendCode = () => {\n    /*await Auth.resendSignUp(email)\r\n    .then((data) => {\r\n        */\n    setResendCodeAlert(true);\n    setTimeout(() => {\n      setResendCodeAlert(false);\n    }, 4000);\n    /*\r\n    })\r\n    .catch((error) => {\r\n    console.log(error.message)\r\n    switch (error.message) {\r\n        case \"Username cannot be empty\":\r\n            setLoading(false)\r\n            setAlert(true)\r\n            setMessage(\"Il campo della mail non può essere vuoto.\")\r\n            break;\r\n        case \"User is already confirmed.\":\r\n            setAlert(true)\r\n            setLoading(false)\r\n            setMessage(\"L'utente è già stato confermato.\")\r\n            setTimeout(function(){window.location.href=\"/\"}, 6000)\r\n            break;\r\n        case \"Username/client id combination not found.\":\r\n            setAlert(true)\r\n            setMessage(\"L'email non è associata a nessun account.\")\r\n            setLoading(false)\r\n            break;\r\n        case \"Attempt limit exceeded, please try after some time.\":\r\n            setAlert(true)\r\n            setMessage(\"Hai effettuato troppi tentativi. Riprova più tardi.\")\r\n            setLoading(false)\r\n            break;\r\n        default:\r\n            setAlert(true)\r\n            setMessage(\"\")\r\n            setLoading(false)\r\n            break;\r\n    }\r\n    })*/\n  };\n\n  //Variabili per il settaggio del caricamento del loading button, del testo del messaggio dell'alert,\n  //dell'attivazione dell'alert, del check del \"ricordami\".\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState([]);\n  const [alert, setAlert] = useState(false);\n  const [confirmAlert, setConfirmAlert] = useState(false);\n\n  //Funzione che si esegue quando clicchi sul pulsante \"Esegui l'accesso\".\n  //AAA: Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\n  const onPressConfirm = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setAlert(false);\n    setMessage([]);\n    const mainAlertMessages = () => {\n      setMessage([]);\n      const messages = [{\n        key: \"codeInvalid\",\n        message: \"Verifica che il codice inserito sia in un formato valido.\",\n        visible: !codeValid && !codeEmpty\n      }, {\n        key: \"emailEmpty\",\n        message: \"Verifica che tutti i campi siano compilati.\",\n        visible: codeEmpty\n      }];\n      return messages;\n    };\n    const messages = mainAlertMessages();\n    const allConditionsSatisfied = messages.every(message => !message.visible);\n    if (!allConditionsSatisfied) {\n      setAlert(true);\n      setMessage(messages);\n      setLoading(false);\n    } else {\n      setAlert(false);\n      setMessage([]);\n      /*\r\n      await Auth.confirmSignUp(email, code)\r\n      .then(() =>{\r\n          */\n      setConfirmAlert(true);\n      setTimeout(() => {\n        localStorage.removeItem(\"email\");\n        window.location.href = \"/\";\n      }, 2500);\n      /*\r\n      })\r\n      .catch((error) => {\r\n      switch (error.message) {\r\n          case \"Confirmation code cannot be empty\":\r\n              setAlert(true)\r\n              setLoading(false)\r\n              setMessage(\"Il campo del codice non può essere vuoto.\")\r\n              break;\r\n          case \"Username cannot be empty\":\r\n              setLoading(false)\r\n              setAlert(true)\r\n              setMessage(\"Il campo della mail non può essere vuoto.\")\r\n              break;\r\n          case \"Invalid verification code provided, please try again.\":\r\n              setLoading(false)\r\n              setAlert(true)\r\n              setMessage(\"Il codice inserito non è valido, per favore ripeti.\")\r\n              break;\r\n          case \"User cannot be confirmed. Current status is CONFIRMED\":\r\n              setLoading(false)\r\n              setAlert(true)\r\n              setMessage(\"L'utente è già stato confermato.\")\r\n              setTimeout(function(){window.location.href=\"/\"}, 6000)\r\n              break;\r\n          case \"Username/client id combination not found.\":\r\n              setLoading(false)\r\n              setAlert(true)\r\n              setMessage(\"L'email non è associata a nessun account.\")\r\n              break;\r\n          case \"Attempt limit exceeded, please try after some time.\":\r\n              setLoading(false)\r\n              setAlert(true)\r\n              setMessage(\"Hai tentato troppe volte, per favore ripeti più avanti.\")\r\n              break;\r\n          default:\r\n              switch (error.name) {\r\n                  case \"Il formato del codice non è valido, verifica che non ci siano spazi.\":\r\n                      setLoading(false)\r\n                      setAlert(true)\r\n                      setMessage()\r\n                      break;\r\n                  default:\r\n                      setLoading(false)\r\n                      setAlert(true)\r\n                      setMessage(\"\")\r\n                      break;\r\n              }\r\n              break;\r\n      }\r\n      })*/\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm-container\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 2,\n        columnSpacing: 1,\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            color: \"primary\",\n            fontWeight: \"bold\",\n            children: \"Conferma Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"text_container\",\n            style: {\n              padding: \"10px\",\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"left\",\n              children: [\"Ti \\xE8 stato inviato un codice di verifica all'indirizzo:\", \" \", /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"bold\",\n                component: \"span\",\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            style: {\n              marginTop: \"3px\",\n              display: !alert && \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginLeft: \"-24px\",\n                marginTop: \"0px\",\n                marginBottom: \"0px\"\n              },\n              children: message.map(message => message.visible && /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"13px\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 33\n                }, this)\n              }, message.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            label: \"Codice\",\n            variant: \"outlined\",\n            value: code === \"\" ? \"\" : code,\n            fullWidth: true,\n            onChange: onChangeCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            rowSpacing: 1,\n            columnSpacing: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"left\",\n                variant: \"subtitle1\",\n                fontSize: \"15px\",\n                tabIndex: 0,\n                onClick: onClickResendCode,\n                style: {\n                  cursor: \"pointer\",\n                  marginTop: \"9px\",\n                  marginRight: \"5px\"\n                },\n                children: \"Non hai ricevuto il codice? Rinvia codice.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n              type: \"submit\",\n              variant: \"contained\",\n              fullWidth: true,\n              loading: loading,\n              onClick: onPressConfirm,\n              children: \"Conferma\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: confirmAlert,\n      autoHideDuration: 2500,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Account confermato con successo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: resendCodeAlert,\n      autoHideDuration: 4000,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: [\"Il codice \\xE8 stato inviato all'indirizzo:\", \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          fontWeight: \"bold\",\n          fontSize: \"14px\",\n          component: \"span\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPasswordForm, \"jgn31K+mlQMZzGoDAXFzX85Th54=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Alert","Button","Checkbox","Divider","FormControl","FormControlLabel","Grid","Snackbar","TextField","Typography","useTheme","LoadingButton","jsxDEV","_jsxDEV","ForgotPasswordForm","_s","navigate","theme","email","localStorage","getItem","code","setCode","codeEmpty","setCodeEmpty","codeValid","setCodeValid","resendCodeAlert","setResendCodeAlert","onChangeCode","event","inputCode","target","value","containsOnlyNumbers","test","onClickResendCode","setTimeout","loading","setLoading","message","setMessage","alert","setAlert","confirmAlert","setConfirmAlert","onPressConfirm","e","preventDefault","mainAlertMessages","messages","key","visible","allConditionsSatisfied","every","removeItem","window","location","href","className","children","component","container","rowSpacing","columnSpacing","display","item","xs","variant","align","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","id","style","padding","backgroundColor","palette","background","paper","borderRadius","severity","marginTop","marginLeft","marginBottom","map","fontSize","type","label","fullWidth","onChange","tabIndex","onClick","cursor","marginRight","open","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Progetto/Frontend/app_frontend/src/components/authComponents/ForgotPasswordForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Alert, Button, Checkbox, Divider, FormControl, FormControlLabel, Grid, Snackbar, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport \"./styles.css\";\r\n\r\nfunction ForgotPasswordForm(){\r\n\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const email = localStorage.getItem(\"email\")\r\n\r\n    useEffect(() => {\r\n        if(!email){\r\n            navigate(\"/\");\r\n        }\r\n    },[email])\r\n\r\n    //Variabili per il settaggio e il controllo sul codice inserito.\r\n    const [code, setCode] = useState(\"\");\r\n    const [codeEmpty, setCodeEmpty] = useState(true);\r\n    const [codeValid, setCodeValid] = useState(false);\r\n    const [resendCodeAlert, setResendCodeAlert] = useState(false);\r\n\r\n    //Funzione per il controllo della validità e il settaggio del codice.\r\n    const onChangeCode = (event) => {\r\n        const inputCode = event.target.value;\r\n        setCode(inputCode);\r\n        const containsOnlyNumbers = /^\\d+$/.test(inputCode);\r\n        if(inputCode === \"\"){\r\n            setCodeEmpty(true);\r\n        }else{\r\n            setCodeEmpty(false);\r\n            if(containsOnlyNumbers){\r\n                setCodeValid(true);\r\n            }else{\r\n                setCodeValid(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Funzione che si esegue quando clicchi sul testo \"Non hai ricevuto il codice? Rinvia codice\".\r\n    const onClickResendCode = () => {\r\n        /*await Auth.resendSignUp(email)\r\n        .then((data) => {\r\n            */\r\n            setResendCodeAlert(true);\r\n            setTimeout(() => {\r\n                setResendCodeAlert(false);\r\n            }, 4000)\r\n            /*\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message)\r\n            switch (error.message) {\r\n                case \"Username cannot be empty\":\r\n                    setLoading(false)\r\n                    setAlert(true)\r\n                    setMessage(\"Il campo della mail non può essere vuoto.\")\r\n                    break;\r\n                case \"User is already confirmed.\":\r\n                    setAlert(true)\r\n                    setLoading(false)\r\n                    setMessage(\"L'utente è già stato confermato.\")\r\n                    setTimeout(function(){window.location.href=\"/\"}, 6000)\r\n                    break;\r\n                case \"Username/client id combination not found.\":\r\n                    setAlert(true)\r\n                    setMessage(\"L'email non è associata a nessun account.\")\r\n                    setLoading(false)\r\n                    break;\r\n                case \"Attempt limit exceeded, please try after some time.\":\r\n                    setAlert(true)\r\n                    setMessage(\"Hai effettuato troppi tentativi. Riprova più tardi.\")\r\n                    setLoading(false)\r\n                    break;\r\n                default:\r\n                    setAlert(true)\r\n                    setMessage(\"\")\r\n                    setLoading(false)\r\n                    break;\r\n            }\r\n        })*/\r\n    }\r\n\r\n    //Variabili per il settaggio del caricamento del loading button, del testo del messaggio dell'alert,\r\n    //dell'attivazione dell'alert, del check del \"ricordami\".\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState([]);\r\n    const [alert, setAlert] = useState(false);\r\n    const [confirmAlert, setConfirmAlert] = useState(false);\r\n\r\n    //Funzione che si esegue quando clicchi sul pulsante \"Esegui l'accesso\".\r\n    //AAA: Quando aggiungeremo il backend bisogna configurare attentamente questa funzione.\r\n    const onPressConfirm = async(e) =>{\r\n        e.preventDefault()\r\n        setLoading(true);\r\n        setAlert(false);\r\n        setMessage([]);\r\n\r\n        const mainAlertMessages = () => {\r\n            setMessage([])\r\n            const messages = [\r\n                { key: \"codeInvalid\", message: \"Verifica che il codice inserito sia in un formato valido.\", visible: !codeValid && !codeEmpty},\r\n                { key: \"emailEmpty\", message: \"Verifica che tutti i campi siano compilati.\", visible: codeEmpty }            \r\n            ]\r\n            return messages;\r\n        };\r\n\r\n        const messages = mainAlertMessages();\r\n        const allConditionsSatisfied = messages.every((message) => !message.visible);\r\n\r\n        if(!allConditionsSatisfied){\r\n            setAlert(true);\r\n            setMessage(messages);\r\n            setLoading(false);\r\n        }else{\r\n            setAlert(false);\r\n            setMessage([]);\r\n            /*\r\n            await Auth.confirmSignUp(email, code)\r\n            .then(() =>{\r\n                */\r\n                setConfirmAlert(true);\r\n                setTimeout(() => {\r\n                    localStorage.removeItem(\"email\");\r\n                    window.location.href=\"/\"\r\n                }, 2500)\r\n                /*\r\n            })\r\n            .catch((error) => {\r\n                switch (error.message) {\r\n                    case \"Confirmation code cannot be empty\":\r\n                        setAlert(true)\r\n                        setLoading(false)\r\n                        setMessage(\"Il campo del codice non può essere vuoto.\")\r\n                        break;\r\n                    case \"Username cannot be empty\":\r\n                        setLoading(false)\r\n                        setAlert(true)\r\n                        setMessage(\"Il campo della mail non può essere vuoto.\")\r\n                        break;\r\n                    case \"Invalid verification code provided, please try again.\":\r\n                        setLoading(false)\r\n                        setAlert(true)\r\n                        setMessage(\"Il codice inserito non è valido, per favore ripeti.\")\r\n                        break;\r\n                    case \"User cannot be confirmed. Current status is CONFIRMED\":\r\n                        setLoading(false)\r\n                        setAlert(true)\r\n                        setMessage(\"L'utente è già stato confermato.\")\r\n                        setTimeout(function(){window.location.href=\"/\"}, 6000)\r\n                        break;\r\n                    case \"Username/client id combination not found.\":\r\n                        setLoading(false)\r\n                        setAlert(true)\r\n                        setMessage(\"L'email non è associata a nessun account.\")\r\n                        break;\r\n                    case \"Attempt limit exceeded, please try after some time.\":\r\n                        setLoading(false)\r\n                        setAlert(true)\r\n                        setMessage(\"Hai tentato troppe volte, per favore ripeti più avanti.\")\r\n                        break;\r\n                    default:\r\n                        switch (error.name) {\r\n                            case \"Il formato del codice non è valido, verifica che non ci siano spazi.\":\r\n                                setLoading(false)\r\n                                setAlert(true)\r\n                                setMessage()\r\n                                break;\r\n                            default:\r\n                                setLoading(false)\r\n                                setAlert(true)\r\n                                setMessage(\"\")\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n            })*/\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"confirm-container\">\r\n            <FormControl component=\"form\">\r\n                <Grid container rowSpacing={2} columnSpacing={1} display=\"flex\">\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\" align=\"center\" color=\"primary\" fontWeight=\"bold\">\r\n                            Conferma Account\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div \r\n                        id=\"text_container\" \r\n                        style={{padding: \"10px\", backgroundColor: theme.palette.background.paper, borderRadius: \"10px\"}}>\r\n                            <Typography \r\n                            variant=\"body1\"\r\n                            align=\"left\">\r\n                                Ti è stato inviato un codice di verifica all'indirizzo:{\" \"}\r\n                                <Typography fontWeight=\"bold\" component=\"span\">{email}</Typography>\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        style={{marginTop: \"3px\", display: !alert && \"none\"}}\r\n                        >\r\n                            <ul style={{marginLeft: \"-24px\", marginTop: \"0px\", marginBottom: \"0px\"}}>\r\n                            {message.map((message) => (\r\n                                message.visible && (\r\n                                <Typography key={message.key} fontSize=\"13px\">\r\n                                <li>{message.message}</li>\r\n                                </Typography>\r\n                                )\r\n                            ))}\r\n                            </ul>\r\n                        </Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        type=\"text\"\r\n                        label=\"Codice\"\r\n                        variant=\"outlined\"\r\n                        value={code === \"\"? \"\" : code}\r\n                        fullWidth\r\n                        onChange={onChangeCode}\r\n                        />\r\n                        <Grid container rowSpacing={1} columnSpacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Typography \r\n                                align=\"left\"\r\n                                variant=\"subtitle1\" \r\n                                fontSize=\"15px\"\r\n                                tabIndex={0}\r\n                                onClick={onClickResendCode}\r\n                                style={{cursor: \"pointer\", marginTop:\"9px\", marginRight: \"5px\"}}>\r\n                                    Non hai ricevuto il codice? Rinvia codice.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid item xs={12}>\r\n                            <LoadingButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\" \r\n                            fullWidth\r\n                            loading={loading}\r\n                            onClick={onPressConfirm}\r\n                            >\r\n                                Conferma\r\n                            </LoadingButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </FormControl>\r\n            <Snackbar\r\n            open={confirmAlert} \r\n            autoHideDuration={2500} \r\n            anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}} \r\n            >\r\n                <Alert severity=\"success\">\r\n                    Account confermato con successo!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n            open={resendCodeAlert} \r\n            autoHideDuration={4000} \r\n            anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}} \r\n            >\r\n                <Alert severity=\"success\">\r\n                    Il codice è stato inviato all'indirizzo:{\" \"}\r\n                    <Typography fontWeight=\"bold\" fontSize=\"14px\" component=\"span\">{email}</Typography>\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}